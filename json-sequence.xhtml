<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/TR/2001/REC-MathML2-20010221/dtd/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.6" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>JavaScript Object Notation (JSON) Text Sequences</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.abstract {
font-size: small;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
div.abstract_label {
font-weight: bold;
font-size: large;
text-align: center;

}

div.abstract {
margin: 4ex;
}
div.abstract_item {
font-size: small;
padding-top: 1ex;
}
div.abstract_label {
font-weight: bold;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
div.revisionremark {
text-align: left;

}
div.flex_docname {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ipr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_intendedstatus {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_titleabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfarea {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_xml_rfckeyword {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfworkinggroup {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_toc {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_symrefs {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_tocindent {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororg {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororgabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authoremailaddr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_entityxref {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.float {
border: 2px solid black;
text-align: center;
}
div.listings {
font-family: monospace;
}
div.float-caption {
text-align: center;
border: 2px solid black;
padding: 1ex;
margin: 1ex;
}
div.flex_bibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />
JavaScript Object Notation (JSON) Text Sequences</h1>
<div class="standard"><a id='magicparlabel-2' />
<div class="flex_docname"><div class="plain_layout"><a id='magicparlabel-6' />
draft-ietf-json-text-sequence-06</div>
</div><div class="flex_ipr"><div class="plain_layout"><a id='magicparlabel-10' />
trust200902</div>
</div><div class="flex_intendedstatus"><div class="plain_layout"><a id='magicparlabel-14' />
std</div>
</div></div>

<div class="standard"><a id='magicparlabel-15' />
<div class="flex_titleabbrev"><div class="plain_layout"><a id='magicparlabel-19' />
JSON Text Sequences</div>
</div><div class="flex_ietfarea"><div class="plain_layout"><a id='magicparlabel-23' />
Apps Area</div>
</div><div class="flex_xml_rfckeyword"><div class="plain_layout"><a id='magicparlabel-27' />
Internet-Draft</div>
</div></div>

<div class="standard"><a id='magicparlabel-28' />
<div class="flex_ietfworkinggroup"><div class="plain_layout"><a id='magicparlabel-32' />
json</div>
</div></div>

<div class="standard"><a id='magicparlabel-33' />
<div class="flex_pi_toc"><div class="plain_layout"><a id='magicparlabel-37' />
yes</div>
</div></div>

<div class="standard"><a id='magicparlabel-38' />
<div class="flex_pi_symrefs"><div class="plain_layout"><a id='magicparlabel-42' />
yes</div>
</div></div>

<div class="standard"><a id='magicparlabel-43' />
<div class="flex_pi_tocindent"><div class="plain_layout"><a id='magicparlabel-47' />
no</div>
</div></div>

<div class="standard"><a id='magicparlabel-48' />
<div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-52' />
comments="yes"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-56' />
inline="yes"</div>
</div></div>

<div class="author"><div class="author_item"><a id='magicparlabel-57' />
Nicolas Williams<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-61' />
Cryptonector, LLC</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-65' />
Cryptonector</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-69' />
nico@cryptonector.com</div>
</div></div>
</div>

<div class="abstract"><div class="abstract_label">Abstract</div>
<div class="abstract_item"><a id='magicparlabel-70' />
This document describes the JSON text sequence format and associated media type.</div>
</div>
<div class="standard"><a id='magicparlabel-71' />
</div>
<div class='toc'><div class='tochead part_'>Table of Contents</div>

<div class='lyxtoc-1'><a href='#magicparlabel-72' class='tocentry'>1 Introduction and Motivation</a> <a href='#magicparlabel-72' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-80' class='tocentry'>1.1 Conventions used in this document</a> <a href='#magicparlabel-80' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-86' class='tocentry'>2 JSON Text Sequence Format</a> <a href='#magicparlabel-86' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-110' class='tocentry'>2.1 Incomplete JSON texts need not be fatal</a> <a href='#magicparlabel-110' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-112' class='tocentry'>2.2 Interoperability note</a> <a href='#magicparlabel-112' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-115' class='tocentry'>3 Security Considerations</a> <a href='#magicparlabel-115' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-122' class='tocentry'>4 IANA Considerations</a> <a href='#magicparlabel-122' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-133' class='tocentry'>5 Normative References</a> <a href='#magicparlabel-133' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-149' class='tocentry'>6 Acknowledgements</a> <a href='#magicparlabel-149' class='tocarrow'>&gt;</a></div>
</div>

<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-72' />
Introduction and Motivation</h2>
<div class="standard"><a id='magicparlabel-73' />
The JavaScript Object Notation (JSON) <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-77' />
RFC7159</div>
</div> is a very handy serialization format. However, when serializing a large sequence of values as an array, or a possibly indeterminate-length or never-ending sequence of values, JSON becomes difficult to work with.</div>

<div class="standard"><a id='magicparlabel-78' />
Consider a sequence of one million values, each possibly 1 kilobyte when encoded &ndash; roughly one gigabyte. It is often desirable to process such a dataset in an incremental manner: without having to first read all of it before beginning to produce results. Traditionally the way to do this with JSON is to use a &ldquo;streaming&rdquo; parser, but these are neither widely available, widely used, nor easy to use.</div>

<div class="standard"><a id='magicparlabel-79' />
This document describes the concept and format of &ldquo;JSON text sequences&rdquo;, which are specifically not JSON texts themselves but are composed of JSON texts. JSON text sequences can be parsed (and produced) incrementally without having to have a streaming parser (nor encoder).</div>
<h3 class="subsection"><span class="subsection_label">1.1</span> <a id='magicparlabel-80' />
Conventions used in this document</h3>
<div class="standard"><a id='magicparlabel-81' />
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-85' />
RFC2119</div>
</div>.</div>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-86' />
<a id="sec_JSON_Text_Sequence" />
JSON Text Sequence Format</h2>
<div class="standard"><a id='magicparlabel-87' />
The ABNF <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-91' />
RFC5234</div>
</div> for the JSON text sequence format is as given in <a href="#fig_JSON_text_sequence">1</a>.</div>

<div class="standard"><a id='magicparlabel-92' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-96' />
</div>
<div class='float float-listings'><pre>  JSON-sequence = *(1*RS JSON-text)
  RS = %x1E; See RFC20
  JSON-text = &lt;given by RFC7159&gt;</pre></div>


<div class="plain_layout"><a id='magicparlabel-103' />
<div class='float-caption float-caption-figure'>Figure 1:<div class="plain_layout"><a id='magicparlabel-107' />
<a id="fig_JSON_text_sequence" />
JSON text sequence ABNF</div>
</div></div>
</div>


<div class="standard"><a id='magicparlabel-108' />
In prose: any number of JSON texts, each preceded by one or more ASCII RS characters. Since ASCII RS is a control character it may only appear in JSON strings in escaped form, and since RS may not appear in JSON texts in any other form, RS unambiguously delimits every JSON text (except the final text in the sequence). Two or more RS characters in sequence do not denote &ldquo;empty&rdquo; nor missing JSON texts. JSON text sequence encoders MAY emit an RS after emitting a JSON text.</div>

<div class="revisionremark"><a id='magicparlabel-109' />
TODO: Add proper reference to ASCII, for RS.</div>
<h3 class="subsection"><span class="subsection_label">2.1</span> <a id='magicparlabel-110' />
Incomplete JSON texts need not be fatal</h3>
<div class="standard"><a id='magicparlabel-111' />
JSON text sequence parsers SHOULD NOT abort when RS terminates an incomplete JSON text. Such a situation may arise in contexts where append-writes to log files are truncated by the filesystem (e.g., due to a crash, or administrative process termination).</div>
<h3 class="subsection"><span class="subsection_label">2.2</span> <a id='magicparlabel-112' />
Interoperability note</h3>
<div class="standard"><a id='magicparlabel-113' />
There exist applications which use a format not unlike this one, but using LF instead of RS as the separator, or even using no whitespace unless it is necessary for disambiguating JSON texts (numbers, booleans, null). JSON text sequence parsers MAY permit this, but JSON text sequence encoders MUST only use RS as the separator (as described above).</div>

<div class="standard"><a id='magicparlabel-114' />
In some contexts it is useful to write an LF (%x1A) after writing a JSON text: it makes working with line-oriented text tools easier.</div>
<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-115' />
<a id="sec_Security_Considerations" />
Security Considerations</h2>
<div class="standard"><a id='magicparlabel-116' />
All the security considerations of JSON <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-120' />
RFC7159</div>
</div> apply.</div>

<div class="standard"><a id='magicparlabel-121' />
There is no end of sequence indicator. This means that &ldquo;end of file&rdquo;, &ldquo;end of transmission&rdquo;, and so on, can be indistinguishable from a logical end of sequence. Applications where this matters should denote end of sequence by convention (e.g., Content-Length in HTTP).</div>
<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-122' />
<a id="sec_IANA_Considerations" />
IANA Considerations</h2>
<div class="standard"><a id='magicparlabel-123' />
The MIME media type for JSON text sequences is application/json-seq.</div>

<div class="standard"><a id='magicparlabel-124' />
Type name: application</div>

<div class="standard"><a id='magicparlabel-125' />
Subtype name: json-seq</div>

<div class="standard"><a id='magicparlabel-126' />
Required parameters: n/a</div>

<div class="standard"><a id='magicparlabel-127' />
Optional parameters: n/a</div>

<div class="standard"><a id='magicparlabel-128' />
Encoding considerations: binary</div>

<div class="standard"><a id='magicparlabel-129' />
Security considerations: See &lt;this document, once published&gt;, <a href="#sec_Security_Considerations">3</a>.</div>

<div class="standard"><a id='magicparlabel-130' />
Interoperability considerations: Described herein.</div>

<div class="standard"><a id='magicparlabel-131' />
Published specification: &lt;this document, once published&gt;.</div>

<div class="standard"><a id='magicparlabel-132' />
Applicat<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">rfc2119</a>ions that use this media type: JSON text sequences have been used in applications written with the jq programming language.</div>
<h2 class="section"><span class="section_label">5</span> <a id='magicparlabel-133' />
<a id="sec_References" />
Normative References</h2>
<div class="standard"><a id='magicparlabel-134' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-138' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">rfc2119</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-139' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-143' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml">rfc5234</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-144' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-148' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml">rfc7159</a></div>
</div></div>
<h2 class="section"><span class="section_label">6</span> <a id='magicparlabel-149' />
Acknowledgements</h2>
<div class="standard"><a id='magicparlabel-150' />
Phillip Hallam-Baker proposed the use of JSON text sequences for logfiles and pointed out the need for resynchronization. James Manger contributed the ABNF for resynchronization. Stephen Dolan created <a href="jq">https://github.com/stedolan/jq</a>, which uses something like JSON text sequences (with LF as the separator between texts on output, and requiring only such whitespace as needed to disambiguate on input). Special thanks to Carsten Bormann for suggesting the use of ASCII RS.</div>
</body>
</html>
